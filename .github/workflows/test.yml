name: Test
on:
  push: { branches: [ "master" ] }
  pull_request: { branches: [ "master" ] }

concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-libflatsurf:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        target:
          - check
          - check-valgrind
    steps:
      - uses: actions/checkout@v2
        with: { submodules: recursive }
      - name: install valgrind and libc debug symbols
        run: |
          sudo apt update
          sudo apt install libc6-dbg valgrind
        if: ${{ matrix.target == 'check-valgrind' }}
      - uses: conda-incubator/setup-miniconda@v2
        with: { miniforge-variant: "Mambaforge", miniforge-version: "latest" }
      - name: install dependencies
        shell: bash -l {0}
        run: |
          mamba env update --quiet -n test -f libflatsurf/environment.yml
          conda list
      - name: make ${{ matrix.target }}
        shell: bash -l {0}
        run: |
          echo "::group::bootstrap"
          ./bootstrap

          echo "::group::configure"
          cd libflatsurf
          export CXXFLAGS="$CXXFLAGS -UNDEBUG -g3"
          ./configure --prefix="$PREFIX" --without-benchmark

          echo "::group::make"
          make

          echo "::group::make ${{ matrix.target }}"
          make V=1 ${{ matrix.target }}
      - uses: flatsurf/actions/show-logs@main
        if: ${{ always() }}
  test-pyflatsurf:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python: ["3.6", "3.7", "3.8", "3.9"]
        target:
          - check
        include:
          - python: 3.9
            target: check-valgrind
    steps:
      - uses: actions/checkout@v2
        with: { submodules: recursive }
      - name: install valgrind and libc debug symbols
        run: |
          sudo apt update
          sudo apt install libc6-dbg valgrind
        if: ${{ matrix.target == 'check-valgrind' }}
      - uses: conda-incubator/setup-miniconda@v2
        with: { miniforge-variant: "Mambaforge", miniforge-version: "latest", python-version: "${{ matrix.python }}" }
      - name: install dependencies
        shell: bash -l {0}
        run: |
          mamba env update --quiet -n test -f libflatsurf/environment.yml
          mamba env update --quiet -n test -f pyflatsurf/environment.yml
          conda list
      - name: make ${{ matrix.target }}
        shell: bash -l {0}
        run: |
          echo "::group::bootstrap"
          ./bootstrap

          echo "::group::configure"
          export CXXFLAGS="$CXXFLAGS -UNDEBUG -g3"
          ./configure --prefix="$PREFIX" --without-benchmark

          echo "::group::make"
          make

          echo "::group::make ${{ matrix.target }}"
          cd pyflatsurf
          make ${{ matrix.target }}
      - uses: flatsurf/actions/show-logs@main
        if: ${{ always() }}
  distcheck:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with: { submodules: recursive }
      - uses: conda-incubator/setup-miniconda@v2
        with: { miniforge-variant: "Mambaforge", miniforge-version: "latest" }
      - name: install dependencies
        shell: bash -l {0}
        run: |
          mamba env update --quiet -n test -f libflatsurf/environment.yml
          mamba env update --quiet -n test -f pyflatsurf/environment.yml
          conda list
      - name: make distcheck
        shell: bash -l {0}
        run: |
          echo "::group::bootstrap"
          ./bootstrap

          echo "::group::configure"
          ./configure --prefix="$PREFIX"

          echo "::group::make distcheck"
          make distcheck
      - uses: flatsurf/actions/show-logs@main
        if: ${{ always() }}

env:
  MAKEFLAGS: -j2
